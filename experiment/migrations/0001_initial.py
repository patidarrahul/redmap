# Generated by Django 5.0.4 on 2024-04-26 14:38

import django.db.models.deletion
import experiment.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SpinProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name_plural': '10.Spin Program',
            },
        ),
        migrations.CreateModel(
            name='SpinStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spin_speed', models.IntegerField()),
                ('spin_acceleration', models.IntegerField()),
                ('spin_time', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': '9.Spin Steps',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '1.Categories',
            },
        ),
        migrations.CreateModel(
            name='Formulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('atmosphere', models.CharField(max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField()),
                ('completed', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '8.Formulations',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.CharField(max_length=100)),
                ('arrival_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('total_units', models.IntegerField()),
                ('unit_size', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '6.Inventory',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='IngredientQuantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.formulation')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.inventory')),
            ],
            options={
                'verbose_name_plural': '7.Formulation Ingredients',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.AddField(
            model_name='formulation',
            name='ingredients',
            field=models.ManyToManyField(through='experiment.IngredientQuantity', to='experiment.inventory'),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('Solid', 'Solid'), ('Liquid', 'Liquid'), ('Gas', 'Gas')], max_length=20)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.category')),
            ],
            options={
                'verbose_name_plural': '3.Items',
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.item'),
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('coating_method', models.CharField(choices=[('Spin Coating', 'Spin Coating'), ('Thermal Evaporation', 'Thermal Evaporation')], max_length=100)),
                ('layer_type', models.CharField(max_length=100)),
                ('completed', models.BooleanField(default=False)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.formulation')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('short_name', models.CharField(max_length=10, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '5.Measurmemt Units',
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='measurement_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='experiment.measurementunit'),
        ),
        migrations.AddField(
            model_name='ingredientquantity',
            name='measurement_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='experiment.measurementunit'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created', models.DateTimeField()),
                ('upated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('collaborators', models.ManyToManyField(related_name='collaborators', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Projects',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective', models.CharField(max_length=200)),
                ('notes', models.TextField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.project')),
            ],
            options={
                'verbose_name_plural': 'Experiments',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SpinCoatingCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formulation_volume', models.FloatField()),
                ('antisolvent_used', models.BooleanField(default=False)),
                ('antisolvent_volume', models.FloatField(blank=True, null=True)),
                ('antisolvent_drop_time', models.IntegerField(blank=True, null=True)),
                ('room_temperature', models.IntegerField()),
                ('room_humidity', models.IntegerField()),
                ('atmosphere', models.CharField(max_length=50)),
                ('drying_type', models.CharField(blank=True, max_length=50, null=True)),
                ('drying_temperature', models.IntegerField(blank=True, null=True)),
                ('drying_time', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('antisolvent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='experiment.inventory')),
                ('layer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='experiment.layer')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.spinprogram')),
            ],
            options={
                'verbose_name_plural': 'Spin Conditions',
            },
        ),
        migrations.AddField(
            model_name='spinprogram',
            name='program',
            field=models.ManyToManyField(to='experiment.spinstep'),
        ),
        migrations.CreateModel(
            name='Stack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('geometry', models.CharField(choices=[('N-I-P', 'N-I-P'), ('P-I-N', 'P-I-N'), ('Power-Roll', 'Power-Roll'), ('Other', 'Other')], max_length=100)),
                ('number_of_layers', models.IntegerField(default=0)),
                ('number_of_devices', models.IntegerField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.experiment')),
                ('substrate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.inventory')),
            ],
            options={
                'verbose_name_plural': '11.Stacks',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='StackLayerRelationShip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now=True)),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.layer')),
                ('stack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.stack')),
            ],
            options={
                'verbose_name_plural': '12.StackLayerRelationShip',
                'ordering': ['-added_at'],
            },
        ),
        migrations.AddField(
            model_name='stack',
            name='layers',
            field=models.ManyToManyField(through='experiment.StackLayerRelationShip', to='experiment.layer'),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '2.Suppliers',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.supplier'),
        ),
        migrations.CreateModel(
            name='ThermalEvaporationCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pressure', models.FloatField()),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('layer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='experiment.layer')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=experiment.models.user_profile_path)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
